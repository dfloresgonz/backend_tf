name: Test Deployment
on:
  push:
    branches:
      - main
env:
  DEPLOYMENT_ENV: staging
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}
  AWS_DEFAULT_REGION: ${{ vars.AWS_REGION }}

jobs:
  deployar:
    runs-on: ubuntu-latest
    steps:
      - name: ~ Checkout code ~
        id: CheckoutCode
        uses: actions/checkout/@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: yarn install

      - name: Build functionA
        run: yarn workspace functionA run build && yarn workspace functionA run package

      # - name: Terraform Init
      #   uses: hashicorp/terraform-github-actions/init@v0.4.0
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     TF_ACTION_WORKING_DIR: './infrastructure/service1'
      #     AWS_ACCESS_KEY_ID:  ${{ secrets.AWS_ACCESS_KEY }}
      #     AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_KEY }}

      # - name: Terraform Validate
      #   uses: hashicorp/terraform-github-actions/validate@v0.3.7

      # - name: Terraform Apply
      #   uses: hashicorp/terraform-github-actions/apply@v0.4.0
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #     TF_ACTION_WORKING_DIR: './infrastructure/service1'
      #     AWS_ACCESS_KEY_ID:  ${{ secrets.AWS_ACCESS_KEY }}
      #     AWS_SECRET_ACCESS_KEY:  ${{ secrets.AWS_SECRET_KEY }}

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.3.7
      
      - name: Generate .tfvars file
        run: |
          echo "aws_region = \"${{ env.AWS_DEFAULT_REGION }}\"" > terraform.tfvars
        working-directory: ./infrastructure/service1
      
      - name: Deploy service1
        run: |
          terraform init
          terraform apply -var-file="terraform.tfvars" -auto-approve -input=false
        working-directory: ./infrastructure/service1