name: Test Deployment
on:
  push:
    branches:
      - main
env:
  DEPLOYMENT_ENV: staging
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_KEY }}
  AWS_DEFAULT_REGION: ${{ vars.AWS_REGION }}
  TF_STATE_BUCKET: prueba-state-bucket

jobs:
  deployar:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        servicios: ["service1/functionA"]
    steps:
      - name: Extract folder and file from path
        run: |
          FULL=${{ matrix.servicios }} && SERVICIO=$(dirname "$FULL") && FUNCION=$(basename "$FULL")
          echo "SERVICIO: $SERVICIO"
          echo "FUNCION: $FUNCION"
          echo "SERVICIO=$SERVICIO" >> $GITHUB_ENV
          echo "FUNCION=$FUNCION" >> $GITHUB_ENV

      - name: ~ Checkout code ~
        id: CheckoutCode
        uses: actions/checkout/@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install dependencies
        run: yarn install

      - name: Build ${{ matrix.servicios }}
        run: yarn workspace $FUNCION run build && yarn workspace $FUNCION run package

      - name: Set up Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.3.7
      
      - name: Generate .tfvars file
        id: GenerateTfvars
        run: |
          echo "aws_region = \"${{ env.AWS_DEFAULT_REGION }}\"" > terraform.tfvars
          echo "environment = \"${{ env.DEPLOYMENT_ENV }}\"" >> terraform.tfvars
        working-directory: ./infrastructure/services/$SERVICIO/$FUNCION

      - name: Generate backend.conf file
        id: GenerateBackendConf
        run: |
          echo "bucket = \"${{ env.TF_STATE_BUCKET }}\"" > backend.conf
          echo "key = \"$SERVICIO/$FUNCION/terraform.tfstate\"" >> backend.conf
          echo "region = \"${{ env.AWS_DEFAULT_REGION }}\"" >> backend.conf
        working-directory: ./infrastructure/services/$SERVICIO/$FUNCION
      
      - name: Deploy ${{ matrix.servicios }}
        run: |
          terraform init -backend-config=backend.conf
          terraform apply -var-file="terraform.tfvars" -auto-approve -input=false
        working-directory: ./infrastructure/services/$SERVICIO/$FUNCION